(()=>{"use strict";var __webpack_modules__={361:(__unused_webpack_module,exports)=>{var _keyMap;function _defineProperty(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}exports.default=void 0;var NEW_LINE=/\r\n|\n|\r/,keyMap=(_defineProperty(_keyMap={},"DTSTART","startDate"),_defineProperty(_keyMap,"DTEND","endDate"),_defineProperty(_keyMap,"DESCRIPTION","description"),_defineProperty(_keyMap,"SUMMARY","summary"),_defineProperty(_keyMap,"LOCATION","location"),_keyMap),clean=function(string){return unescape(string).trim()},_default=function(icsData){for(var array=[],currentObj={},lastKey="",lines=icsData.split(NEW_LINE),isAlarm=!1,i=0,iLen=lines.length;i<iLen;++i){var line=lines[i],lineData=line.split(":"),key=lineData[0],value=lineData[1];if(-1!==key.indexOf(";")){var keyParts=key.split(";");key=keyParts[0]}if(lineData.length<2)key.startsWith(" ")&&void 0!==lastKey&&lastKey.length&&(currentObj[lastKey]+=clean(line.substr(1)));else switch(lastKey=keyMap[key],key){case"BEGIN":"VEVENT"===value?currentObj={}:"VALARM"===value&&(isAlarm=!0);break;case"END":isAlarm=!1,"VEVENT"===value&&array.push(currentObj);break;case"DTSTART":currentObj[keyMap.DTSTART]=value;break;case"DTEND":currentObj[keyMap.DTEND]=value;break;case"DESCRIPTION":isAlarm||(currentObj[keyMap.DESCRIPTION]=clean(value));break;case"SUMMARY":currentObj[keyMap.SUMMARY]=clean(value);break;case"LOCATION":currentObj[keyMap.LOCATION]=clean(value);default:continue}}return array};exports.default=_default}},__webpack_module_cache__={};const loadConfig=(key="")=>{let currentConfigs=localStorage.getItem("fjb-dekatrian-config");if(currentConfigs?currentConfigs=JSON.parse(currentConfigs):(currentConfigs={firstDayOfWeek:"flex",firstYear:"human",language:"en",showGregorian:"yes"},localStorage.setItem("fjb-dekatrian-config",JSON.stringify(currentConfigs))),key)return currentConfigs[key];Object.entries(currentConfigs).forEach((([key,value])=>{document.querySelector(`input[name="${key}"][value="${value}"]`).checked=!0}))},dekatrianNames={days:["Acronian","Sincronian"],months:["Auroran","Borean","Coronian","Driadan","Electran","Faian","Gaian","Helian","Irisian","Kaosian","Lunan","Maian","Nixian"]},translates={today:{en:"Today",pt:"Hoje",eo:"Hodiaŭ"},of:{en:"of",pt:"de",eo:"de"},settings:{en:"Settings",pt:"Configurações",eo:"Konfiguraĵo"},weekdaysNames:{en:["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],pt:["Domingo","Segunda","Terça","Quarta","Quinta","Sexta","Sábado"],eo:["Dimanĉo","Lundo","Mardo","Merkredo","Ĵaŭdo","Vendredo","Sabato"]},gregorianMonths:{en:["January","February","March","April","May","June","July","August","September","October","November","December"],pt:["Janeiro","Fevereiro","Março","Abril","Maio","Junho","Julho","Agosto","Setembro","Outubro","Novembro","Dezembro"],eo:["Januaro","Februaro","Marto","Aprilo","Majo","Junio","Julio","Aŭgusto","Septembro","Oktobro","Novembro","Decembro"]},firstDayOfTheWeek:{en:"First day of the week",pt:"Primeiro dia da semana",eo:"Unua tago de la semajno"},flexible:{en:"Flexible",pt:"Flexível",eo:"Fleksebla"},initialYear:{en:"Initial year",pt:"Ano inicial",eo:"Komenca jaro"},commonEra:{en:"Common Era",pt:"Era Comum",eo:"Nia erao"},holoceneEra:{en:"Holocene Era",pt:"Era Holocena",eo:"Holocena erao"},language:{en:"Language",pt:"Idioma",eo:"Lingvo"},addEvent:{en:"Add event",pt:"Adicionar evento",eo:"Aldoni eventon."},eventDisclaimer:{en:"Events are only saved locally.",pt:"Eventos são salvos apenas localmente.",eo:"Eventoj nur estas savita loke."}};translates.sunday={en:translates.weekdaysNames.en[0],pt:translates.weekdaysNames.pt[0],eo:translates.weekdaysNames.eo[0]},translates.monday={en:translates.weekdaysNames.en[1],pt:translates.weekdaysNames.pt[1],eo:translates.weekdaysNames.eo[1]};const getDekatrianNames=(key,value)=>dekatrianNames[key][value],getTranslate=(key,lang,value=-1)=>value>-1?translates[key][lang][value]:translates[key][lang],doTranslate=()=>{const lang=loadConfig("language");document.querySelectorAll("[data-translate]").forEach((element=>{element.dataset.translate&&translates[element.dataset.translate][lang]&&(element.textContent=translates[element.dataset.translate][lang])}));const listGregorianMonths=document.querySelector('select[name="gregorian-month"]');translates.gregorianMonths[lang].map(((month,index)=>{const option=document.createElement("option");option.value=index,option.appendChild(document.createTextNode(month)),listGregorianMonths.appendChild(option)}));const listDekatrianMonths=document.querySelector('select[name="dekatrian-month"]');dekatrianNames.months.map(((month,index)=>{const option=document.createElement("option");option.value=index,option.appendChild(document.createTextNode(month)),listDekatrianMonths.appendChild(option)})),dekatrianNames.days.map((day=>{const option=document.createElement("option");option.className="text-right",option.value=day.slice(0,1),option.appendChild(document.createTextNode(day)),listDekatrianMonths.appendChild(option)}))},changeMonth=goForward=>{let{year,month}=JSON.parse(localStorage.getItem("fjb-dekatrian-current-month"));goForward&&12===month?(month=0,year++):goForward||0!==month?goForward?month++:month--:(month=12,year--),location.hash=`${year}-${month+1}`},daysPerGregorianMonthGlobal=[31,28,31,30,31,30,31,31,30,31,30,31],getDayLines=(year,month,day)=>{const gregorianDate=((year,month,day)=>{let daysPerGregorianMonth=JSON.parse(JSON.stringify(daysPerGregorianMonthGlobal)),convertedMonth=0,convertedDay=0,daysFromStart=1;return isLeapYear(year)&&(daysPerGregorianMonth[1]=29,daysFromStart+=1),Number.isInteger(day)?(daysFromStart+=28*month,daysFromStart+=day,daysPerGregorianMonth.some(((daysInMonth,index)=>(daysFromStart-=daysInMonth,daysFromStart<=0&&(convertedMonth=index,convertedDay=daysInMonth+daysFromStart,!0))))):"A"===day?convertedDay=1:"S"===day&&(convertedDay=2),{year,month:convertedMonth,day:convertedDay}})(year,month,day),events=JSON.parse(localStorage.getItem("fjb-dekatrian-events")),lang=loadConfig("language");let lines=[];if("yes"===loadConfig("showGregorian")){const gregorianDay=gregorianDate.day,gregorianOf=getTranslate("of",lang),gregorianMonth=getTranslate("gregorianMonths",lang,gregorianDate.month);lines.push({name:`${gregorianDay} ${gregorianOf} ${gregorianMonth}`,type:"standard"})}if(!events)return lines;if(events.gregorian)for(const key in events.gregorian)"monthly"===key&&events.gregorian.monthly.hasOwnProperty(gregorianDate.day)?lines=lines.concat(events.gregorian.monthly[gregorianDate.day].filter((event=>!event.year||!!event.year&&gregorianDate.year===event.year)).map(((event,index)=>({...event,id:index,day:gregorianDate.day,type:"gregorian",repeat:"monthly"})))):key==gregorianDate.month&&events.gregorian.hasOwnProperty(gregorianDate.month)&&events.gregorian[gregorianDate.month].hasOwnProperty(gregorianDate.day)&&(lines=lines.concat(events.gregorian[gregorianDate.month][gregorianDate.day].filter((event=>!event.year||!!event.year&&gregorianDate.year===event.year)).map(((event,index)=>({...event,id:index,day:gregorianDate.day,month:gregorianDate.month,type:"gregorian",repeat:"anual"})))));if(events.dekatrian)for(const key in events.dekatrian)"monthly"===key?events.dekatrian.monthly.hasOwnProperty(day)&&(lines=lines.concat(events.dekatrian.monthly[day].map(((event,index)=>({...event,id:index,day,type:"dekatrian",repeat:"monthly"}))))):events.dekatrian.hasOwnProperty(month)&&events.dekatrian[month].hasOwnProperty(day)&&(lines=lines.concat(events.dekatrian[month][day].map(((event,index)=>({...event,id:index,day,month,type:"dekatrian",repeat:"anual"})))));return lines},isLeapYear=year=>year%4==0&&year%100!=0||year%400==0,renderWeekDay=(node,name,classes)=>{let{dayClass,titleClass}=classes;const dayCell=document.createElement("div");dayCell.className="py-1 border "+dayClass;const title=document.createElement("h3");title.className="inline-block "+titleClass,title.appendChild(document.createTextNode(name)),dayCell.appendChild(title),node.appendChild(dayCell)},renderDay=(node,date,classes,lines=[])=>{const today=JSON.parse(localStorage.getItem("fjb-dekatrian-today"));let type,{year,month,day,spot}=date,{dayClass,titleClass}=classes;classes.type&&(type=classes.type);const dayCell=document.createElement("div");dayCell.className="h-full overflow-hidden py-1 px-1 md:px-2 border border-t-0 ",spot%7!=0&&(dayCell.className+="border-r-0 ");const title=document.createElement("h4");title.appendChild(document.createTextNode(day)),title.className=titleClass+" inline-block rounded-full p-1 h-7 aspect-square ",dayCell.className+=dayClass,-1===month&&(year-=1),year===today.year&&month===today.month&&day===today.day?title.className+="bg-blue-700 text-white ":title.className+="holiday"===type?"bg-red-500 text-white ":"text-gray-500 ",dayCell.appendChild(title),lines=lines.concat(getDayLines(year,month,day));const calendarColors={standard:"bg-teal-100",gregorian:"bg-blue-100",dekatrian:"bg-orange-100"};lines.map((event=>{const line=document.createElement("div");if(line.className="mt-1 py-1 px-2 rounded text-xs text-left text-black "+calendarColors[event.type],"standard"!==event.type){const close=document.createElement("i");close.className="fa-solid fa-xmark float-right cursor-pointer",close.addEventListener("click",(()=>(event=>{let currentEvents=JSON.parse(localStorage.getItem("fjb-dekatrian-events"));const key="monthly"===event.repeat?"monthly":event.month;currentEvents[event.type][key][event.day].splice(event.id,1),localStorage.setItem("fjb-dekatrian-events",JSON.stringify(currentEvents)),renderCalendar()})(event))),line.appendChild(close)}line.appendChild(document.createTextNode(event.name)),dayCell.appendChild(line)})),node.appendChild(dayCell)},getToday=()=>{let todayGregorian=new Date;const todayDekatrian=(date=>{const{year,month,day}=date;let daysPerGregorianMonth=JSON.parse(JSON.stringify(daysPerGregorianMonthGlobal)),convertedMonth=0,convertedDay=0,daysFromStart=-1;if(0===month&&(1===day||2===day&&isLeapYear(year)))return{year:year-1,month:-1,day};for(isLeapYear(year)&&(daysPerGregorianMonth[1]=29,daysFromStart-=1),daysPerGregorianMonth.some(((daysInMonth,index)=>index===month?(daysFromStart+=day,!0):(daysFromStart+=daysInMonth,!1)));daysFromStart>28&&!(daysFromStart<=0);)daysFromStart-=28,convertedMonth++;return convertedDay=daysFromStart,{year,month:convertedMonth,day:convertedDay}})({year:todayGregorian.getFullYear(),month:todayGregorian.getMonth(),day:todayGregorian.getDate()});return localStorage.setItem("fjb-dekatrian-today",JSON.stringify(todayDekatrian)),todayDekatrian},renderCalendar=(year=null,month=null)=>{const savedTodayDekatrian=getToday();if(!year&&!month)if(location.hash){const dateHash=location.hash.slice(1).split("-");year=Number(dateHash[0]),month=Number(dateHash[1])-1}else year=savedTodayDekatrian.year,month=savedTodayDekatrian.month;localStorage.setItem("fjb-dekatrian-current-month",JSON.stringify({year,month}));const firstYear=loadConfig("firstYear"),calendar=document.getElementById("calendar");calendar.textContent="",document.getElementById("currentYear").textContent="human"===firstYear?1e4+year:year,document.getElementById("currentMonth").textContent=getDekatrianNames("months",month),(year=>{const lang=loadConfig("language"),firstWeekday=loadConfig("firstDayOfWeek"),week=document.getElementById("week");week.textContent="";let firstWeekdayOfTheYear=new Date(year,0,1).getDay(),daysNames=JSON.parse(JSON.stringify(getTranslate("weekdaysNames",lang)));if("flex"===firstWeekday)for(firstWeekdayOfTheYear+=1,isLeapYear(year)&&(firstWeekdayOfTheYear+=1);firstWeekdayOfTheYear>0;)daysNames.push(daysNames[0]),daysNames.splice(0,1),firstWeekdayOfTheYear--;else"monday"===firstWeekday&&(daysNames.push(daysNames[0]),daysNames.splice(0,1));daysNames.map((dayName=>{renderWeekDay(week,dayName.slice(0,3),{dayClass:"bg-gray-500 text-center",titleClass:"text-white font-semibold uppercase text-sm"})}))})(year);let spot=1,{day}=((year,month)=>{const firstWeekday=loadConfig("firstDayOfWeek");let firstWeekdayOfTheYear=new Date(year,0,1).getDay(),day=1;return"flex"===firstWeekday?0===month&&(day=23,isLeapYear(year)&&(day=24)):(6===firstWeekdayOfTheYear?isLeapYear(year)&&(day=28):(day=28-firstWeekdayOfTheYear,isLeapYear(year)&&(day-=1)),0===month&&(0===firstWeekdayOfTheYear?(day=0,isLeapYear(year)&&(day-=1)):6===firstWeekdayOfTheYear?day=23:(day+=1,isLeapYear(year)&&(day+=1)))),"monday"===firstWeekday&&(isLeapYear(year)&&0===month?28===day?day=-1:-1===day?day=23:27!==day&&(day+=2):28===day?day=1:1===day||0===day?day=23:day>0&&(day+=1)),{day}})(year,month);for(;day<=28&&spot<=35;){let flexYear=year,flexMonth=month;spot<=7&&day>=22?flexMonth-=1:spot>28&&day<=7&&(flexMonth+=1),-1===flexMonth?(flexMonth=12,flexYear-=1):13===flexMonth&&(flexMonth=0,flexYear+=1),0===flexMonth&&day<1?((0===day&&!isLeapYear(flexYear)||-1===day)&&renderDay(calendar,{year:flexYear,month:flexMonth,day:getDekatrianNames("days",0).slice(0,1),spot},{dayClass:"text-center bg-indigo-200 opacity-50 hover:opacity-100",titleClass:"font-number font-bold uppercase text-sm ",type:"holiday"},[{name:getDekatrianNames("days",0),type:"standard"}]),0===day&&isLeapYear(flexYear)&&renderDay(calendar,{year:flexYear,month:flexMonth,day:getDekatrianNames("days",1).slice(0,1),spot},{dayClass:"text-center bg-indigo-200 opacity-50 hover:opacity-100",titleClass:"font-number font-bold uppercase text-sm",type:"holiday"},[{name:getDekatrianNames("days",1),type:"standard"}])):renderDay(calendar,{year:flexYear,month:flexMonth,day,spot},{dayClass:"text-center"+(year!==flexYear||month!==flexMonth?" opacity-50 hover:opacity-100":""),titleClass:"font-number font-bold uppercase text-sm"}),day++,spot++,29===day&&12===flexMonth&&(day=0,isLeapYear(flexYear+1)&&(day=-1)),29===day&&(day=1)}};var dist=function __webpack_require__(moduleId){var cachedModule=__webpack_module_cache__[moduleId];if(void 0!==cachedModule)return cachedModule.exports;var module=__webpack_module_cache__[moduleId]={exports:{}};return __webpack_modules__[moduleId](module,module.exports,__webpack_require__),module.exports}(361);const importIcs=files=>new Promise(((resolve,reject)=>{files.length||reject();const reader=new FileReader;reader.onload=e=>resolve((rawFile=>{let currentEvents=localStorage.getItem("fjb-dekatrian-events");currentEvents=currentEvents?JSON.parse(currentEvents):{gregorian:{},dekatrian:{},imports:[]};const events=(0,dist.default)(rawFile),nowHash=(new Date).getTime();events.map((event=>{const month=Number(event.startDate.slice(4,6))-1,day=Number(event.startDate.slice(6,8));currentEvents.gregorian.hasOwnProperty(month)||(currentEvents.gregorian[month]={}),currentEvents.gregorian[month].hasOwnProperty(day)||(currentEvents.gregorian[month][day]=[]),currentEvents.gregorian[month][day].push({name:event.summary,year:Number(event.startDate.slice(0,4)),import:nowHash})})),currentEvents.imports.push({count:events.length,import:nowHash}),localStorage.setItem("fjb-dekatrian-events",JSON.stringify(currentEvents))})(e.target.result)),reader.onerror=reject,reader.readAsText(files[0])})),importJSON=files=>new Promise(((resolve,reject)=>{files.length||reject();const reader=new FileReader;reader.onload=e=>resolve((file=>{let newEvents=JSON.parse(file);if(!newEvents.gregorian||!newEvents.dekatrian||!newEvents.imports)return;let events=localStorage.getItem("fjb-dekatrian-events");events=events?JSON.parse(events):{gregorian:{},dekatrian:{},imports:[]};const eventsJoined={gregorian:{...newEvents.gregorian,...events.gregorian},dekatrian:{...newEvents.dekatrian,...events.dekatrian},imports:[...newEvents.imports,...events.imports]};localStorage.setItem("fjb-dekatrian-events",JSON.stringify(eventsJoined))})(e.target.result)),reader.onerror=reject,reader.readAsText(files[0])})),doAction=action=>{({goToToday:()=>{const{year,month}=JSON.parse(localStorage.getItem("fjb-dekatrian-today"));location.hash=`${year}-${month+1}`},prevMonth:()=>changeMonth(!1),nextMonth:()=>changeMonth(!0),openAddEvent:()=>document.getElementById("add-event").classList.remove("hidden"),closeAddEvent:()=>document.getElementById("add-event").classList.add("hidden"),openConfig:()=>{(()=>{let events=localStorage.getItem("fjb-dekatrian-events");if(!events)return;let dataUri="data:application/json;charset=utf-8,"+encodeURIComponent(events);document.querySelector("#btn-export-json").setAttribute("href",dataUri)})(),document.getElementById("config").classList.remove("hidden")},closeConfig:()=>document.getElementById("config").classList.add("hidden")})[action]()};document.querySelectorAll("[data-action]").forEach((element=>{element.addEventListener("click",(e=>{doAction(e.currentTarget.dataset.action)}))}));const changeConfig=e=>{const{name,value}=e.currentTarget;let currentConfigs=JSON.parse(localStorage.getItem("fjb-dekatrian-config"));currentConfigs[name]=value,localStorage.setItem("fjb-dekatrian-config",JSON.stringify(currentConfigs)),doTranslate(),renderCalendar()};document.querySelectorAll(".config").forEach((element=>{element.addEventListener("change",changeConfig)})),document.addEventListener("keyup",(e=>{if(!document.getElementById("add-event").classList.contains("hidden")||!document.getElementById("config").classList.contains("hidden"))return;const triggers={ArrowLeft:()=>doAction("prevMonth"),ArrowRight:()=>doAction("nextMonth")};triggers[e.key]&&triggers[e.key]()})),document.getElementById("add-date-form").addEventListener("submit",(e=>{(e=>{e.preventDefault();const eventData=new FormData(e.currentTarget);let currentEvents=localStorage.getItem("fjb-dekatrian-events");currentEvents=currentEvents?JSON.parse(currentEvents):{gregorian:{},dekatrian:{},imports:[]};const calendar=eventData.get("calendar-base");let month=Number(eventData.get(`${calendar}-month`)),day=Number(eventData.get(`${calendar}-day`)),repeat=eventData.get("event-repeat");["A","S"].includes(month)&&(repeat="anual",day=month,month=0),"monthly"===repeat?(currentEvents[calendar].hasOwnProperty("monthly")||(currentEvents[calendar].monthly={}),currentEvents[calendar].monthly.hasOwnProperty(day)||(currentEvents[calendar].monthly[day]=[]),currentEvents[calendar].monthly[day].push({name:eventData.get("event-name")})):"anual"===repeat&&(currentEvents[calendar].hasOwnProperty(month)||(currentEvents[calendar][month]={}),currentEvents[calendar][month].hasOwnProperty(day)||(currentEvents[calendar][month][day]=[]),currentEvents[calendar][month][day].push({name:eventData.get("event-name")})),localStorage.setItem("fjb-dekatrian-events",JSON.stringify(currentEvents)),e.currentTarget.reset()})(e),doAction("closeAddEvent"),renderCalendar()})),document.querySelectorAll('input[name="calendar-base"]').forEach((element=>{element.addEventListener("change",(e=>{const calendar=e.currentTarget.value;document.querySelectorAll(".calendar-option").forEach((element=>{element.classList.contains("hidden")||element.classList.add("hidden")})),document.querySelectorAll(".event-input").forEach((element=>{element.required=!1})),document.querySelector(`[name="${calendar}-day"]`).required=!0,document.querySelector(`[name="${calendar}-month"]`).required=!0,document.getElementById(`${calendar}-calendar`).classList.remove("hidden")}))})),document.getElementById("import-ics").addEventListener("change",(e=>{e.preventDefault(),importIcs(e.target.files).then((()=>renderCalendar()))})),document.getElementById("import-json").addEventListener("change",(e=>{e.preventDefault(),importJSON(e.target.files).then((()=>renderCalendar()))})),window.addEventListener("hashchange",(()=>{renderCalendar()})),loadConfig(),doTranslate(),renderCalendar()})();